package restaurants_us

const PAGE_SIZE_LIMIT = 50
const ROW_LIMIT = 500

type restuarantsUSData struct {
	factual_id            string "The Factual ID"
	name                  string "Business/POI name"
	address               string "Address number and street name"
	address_extended      string "Additional address, incl. suite numbers"
	po_box                string "PO Box. As they do not represent the physical location of a brick-and-mortar store, PO Boxes are often excluded from mobile use cases."
	locality              string "City, town or equivalent"
	neighborhood          string "The neighborhood(s) or other informal geography in which this entity is found."
	region                string "State, province, territory, or equivalent"
	postcode              string "Postcode or equivalent (zipcode in US)"
	country               string
	latitude              float64 "Latitude in decimal degrees (WGS84 datum). Value will not exceed 6 decimal places (0.111m)"
	longitude             float64 "Longitude in decimal degrees (WGS84 datum). Value will not exceed 6 decimal places (0.111m)"
	tel                   string  "Telephone number with local formatting"
	fax                   string  "Fax number in local formatting"
	chain_id              string  "Indicates which chain (brand or franchise) this entity is a member of. See documentation for more information on Factual Chains."
	chain_name            string  "Label indicating which chain (brand or franchise) this entity is a member of. See documentation for more information on Factual Chains."
	category_ids          int     "Category IDs that classify this entity."
	category_label        string  "Category labels that describe the category branch or 'breadcrumb'."
	website               string  "Authority page (official website)"
	email                 string  "Primary contact email address of organization"
	cuisine               string  "0-n string values describing, very loosely, the food served. A JSON enumerated list is available for download."
	price                 int     "A price metric between one and five; we've used the following scale as an extremely coarse guide: 1: -$15 2: $15-30 3: $30-50 4: $50-75 5: $75+ Usually represented by dollar symbols or the local currency equivalent. Values are available as formatted JSON."
	rating                float64 "A rating between 1 and 5, rounded to nearest half; usually represented graphically by stars. Calculated as the mean of multiple rating rollups across various sites and partners."
	payment_cashonly      bool    "Only accepts cash"
	reservations          bool    "Accepts reservations"
	hours                 string  "JSON representation of hours of operation"
	hours_display         string  "Structured JSON representation of opening hours"
	open_24hrs            bool    "Open 24x7"
	founded               string  "year founded"
	attire                string  "A single value from an enumerated list: streetwear, casual,business casual,smart casual,formal This wordlist is available as downloadable JSON."
	attire_required       string  "Gotta have this on to get in. One or more strings from the following list:shirt with collar,shirt,shoes,jacket,tie,This wordlist is available as downloadable JSON."
	attire_prohibited     string  "Can't get in if you are sporting this. One or more strings from the following list:denim,cuttoffs,tank tops,sneakers,flipflops,sandals,hats,athletic wear,sports wear,boots This wordlist is available as JSON."
	parking               bool    "Some kind of parking is advertised; this will be true when any other parking attributes are true"
	parking_valet         bool    "valet parking is available"
	parking_garage        bool    "Garage parking is available"
	parking_street        bool    "Parking on-street"
	parking_lot           bool    "Parking lot adjacent, not necessarily dedicated to this place"
	parking_validated     bool    "Validated parking is available"
	parking_free          bool    "Free parking is available. This is common in most civilized places, but unknown in LA"
	smoking               bool    "This place allows smoking somewhere"
	meal_breakfast        bool    "serves breakfast"
	meal_lunch            bool    "serves lunch"
	meal_dinner           bool    "serves dinner"
	meal_takeout          bool    "Provides takeout/takeaway"
	meal_cater            bool    "provides catering"
	alcohol               bool    "Alcohol is served or can be consumed on the premesis; this will be true when any other alcohol attributes are true"
	alcohol_bar           bool    "Has a full bar"
	alcohol_beer_wine     bool    "Serves beer and wine only"
	alcohol_byob          bool    "bring your own bottle"
	kids_goodfor          bool    "noted as being good for kids"
	kids_menu             bool    "Had a kids menu"
	groups_goodfor        bool    "Noted as being good for groups"
	accessible_wheelchair bool    "Premesis are noted explictly as being accessible by wheelchair"
	seating_outdoor       bool    "Outdoor seating is available"
	wifi                  bool    "Wifi is provided by the establishment"
	owner                 string  "Owner name(s)"
	room_private          bool    "Private dining room is available"
	options_vegetarian    bool    "vegetarian options noted"
	options_vegan         bool    "Vegan options noted"
	options_glutenfree    bool    "Gluten free items noted"
	options_lowfat        bool    "Lowfat options noted"
	options_organic       bool    "Organic options noted"
	options_healthy       bool    "Healthy dishes are explicitly available"
	admin_region          string  "Additional sub-division. Usually, but not always, a country sub-division"
	post_town             string  "Town/place employed in postal addressing. May not reflect the formal geographic location of a place."
	status                string  "Is the business a going concern: closed (0) or open (1). We are aware that this will prove confusing to electrical engineers. Deprecated, as we now expose only open businesses."
}
